echo ______________________________________________________
echo -
echo ....................A..lias
echo -
echo ....................L..ists
echo -
echo ....................I..njection
echo -
echo ______________________________________________________
echo ..............Installation started !
echo ______________________________________________________
mkdir -p ~/.aliases/.bin/.animation/
mkdir -p ~/.aliases/.bin/.function/
mkdir -p ~/.aliases/.dir/.function/
mkdir -p ~/.aliases/.dir/.template/
mkdir -p ~/.aliases/.list/.function/

if ! [ -f ~/.config/.github/.login ]; then
    mkdir -p ~/.config/.github
    echo "GUTHUB_USERNAME=''
GUTHUB_TOKEN=''" > ~/.config/.github/.login
fi

echo ·________________________________· |grep -E "_"  
echo "| copying files to directory:    |" ~/.aliases/ |grep -E "\|"
echo ·________________________________· |grep -E "·"  
#
cp -Rp ./ali-main/.aliases/.ali.aliases ~/.aliases/
cp ./ali-main/.uninstall ~/.aliases/.uninstall
#
echo ...............ali commands : ~/.aliases/.ali.aliases
#
echo .....deinstall link created : ~/.aliases/.uninstall
#
echo ·________________________________· |grep -E "_" 
echo "| copying files to directory:    |" ~/.aliases/.bin/ |grep -E "\|"
echo ·________________________________· |grep -E "·"  
#
cp -Rp ./ali-main/.aliases/.bin/.function/.ali.function ~/.aliases/.bin/.function/
echo ......Ali Function commands : ~/.aliases/.bin/.function/.ali.function
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
##
cp -Rp ./ali-main/.aliases/.list/.function/.list.function ~/.aliases/.list/.function/
echo .......... Listing Template : ~/.aliases/.list/.function/.list.function
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
##
cp -Rp ./ali-main/.aliases/.bin/.animation/.title.animation ~/.aliases/.bin/.animation/
echo ........... Title Animation : ~/.aliases/.bin/.animation/.title.animation
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
##
cp -Rp ./ali-main/.aliases/.bin/.animation/.title.solid.animation ~/.aliases/.bin/.animation/
echo ........... Title Animation : ~/.aliases/.bin/.animation/.title.solid.animation
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
#
echo ·________________________________· |grep -E "_" 
echo "| copying files to directory:    |" ~/.aliases/.dir/ |grep -E "\|"
echo ·________________________________· |grep -E "·"  
#
directory_to_search="$HOME/ali-main/.aliases/.dir/"
directory_to_search_function="$HOME/ali-main/.aliases/.dir/.function/"
directory_to_save="$HOME/.aliases/.dir/"
directory_to_save_function="$HOME/.aliases/.dir/.function/"
output_file="$HOME/.aliases/.bin/.ali.list"
output_file_var="$HOME/.aliases/.bin/.ali.list.names"
search_pattern=".***.aliases"

echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
if [ -d "$directory_to_search" ]; then # ·c·
        # ·e· ( INFO ) Find commmand searchs for files with pattern abd write it to file  
          find "$directory_to_search" -type f -name "$search_pattern" -exec basename {} \; > "$output_file" # ·c·
          find "$directory_to_search" -type f -name "$search_pattern" -exec basename {} \; | awk -F. '{print $2}' > "$output_file_var" # ·c·
fi
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
if [ -s "$output_file" ]; then # ·c·
    while read -r list; do # ·c·
        # ·e· ( INFO ) If the output file exists, than source it. Check, if file exists as regular file  
          if [ -f "$directory_to_search$list" ]; then # ·c· 
                echo "copy aliases file: $list  ---> $directory_to_save"  
                    cp -r $directory_to_search$list $directory_to_save$list  
          fi # ·c· 
    done < "$output_file" # ·c·
fi # ·c·
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 
if [ -s "$output_file_var" ]; then # ·c·
    while read -r list; do # ·c·
        # ·e· ( INFO ) If the output file exists, than source it. Check, if file exists as regular file  
          if [ -f "$directory_to_search_function.$list.function" ]; then # ·c· 
                echo "copy function file: .$list.function  ---> $directory_to_save_function"  
                    cp -r $directory_to_search_function.$list.function $directory_to_save_function.$list.function  
          fi # ·c· 
    done < "$output_file_var" # ·c·
fi # ·c·
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 

# Extract the first letter and converts it into Capital
first_letter=$(echo "$word" | awk '{print toupper(substr($0,1,1))}')

if [ -s "$output_file_var" ]; then # ·c·
echo "
# ·o· ---------------------------------------------- ·o· " >> ~/.aliases/.ali.aliases
    while read -r list; do # ·c·
    echo "Add Entry Rows for < ${list} > to your file : ~/.aliases/.ali.aliases"  
    echo "
# ( .$list )   : ( ENTRY POINT: ${list^^} ) · ~/.aliases/.list/.$list.lists # ·e· " >> ~/.aliases/.ali.aliases
    done < "$output_file_var" # ·c·
echo "# ·o· ---------------------------------------------- ·o· " >> ~/.aliases/.ali.aliases
fi # ·c·
echo __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ __ 

remove_string_from_file() {
    local search_string="$1"
    local file_path="$2"
    if grep -q "$search_string" "$file_path"; then
        sed -i "/$search_string/d" "$file_path"
    fi
}
bashrc_path="$HOME/.bashrc"
ss_1="#-#-#"
remove_string_from_file "$ss_1" "$bashrc_path"

echo ______________________________________________________
echo ......"UNNESTED: universal entry points removed"
echo from ~/.bashrc file
echo ______________________________________________________

if ! grep -q "$ss_1" "$bashrc_path"; then

echo "#-#-#
# Aliases Loader #-#-#
alias '.ali.setup'='cd ~ && wget https://github.com/sehzam/ali/archive/refs/heads/main.zip && unzip main.zip && rm main.zip && . ~/ali-main/.setup && . ~/.bashrc' #-#-#
alias '.as'='.ali.setup' #-#-#
#-#-# 
#Alias Entry Point #-#-#
if [ -f ~/.aliases/.ali.aliases ]; then #-#-#
source  ~/.aliases/.ali.aliases #-#-# 
source  ~/.aliases/.bin/.animation/.title.animation #-#-# 
fi #-#-#
 #-#-#
# Grep Custom Color #-#-#
export GREP_COLORS='sl=1;96:cx=91:mt=1;90:ms=1;92:fn=1;93:ln=91:se=0;90:ms=91' #-#-#
#-#-#" >> ~/.bashrc
fi

echo ......"NESTED: universal entry points added"
echo from ~/.bashrc file
echo ______________________________________________________
echo ......... Installation complete !
echo ______________________________________________________ 
echo ...................................................... 
echo .............."U S A G E: Uninstall & Update:"
echo ...................................................... 
echo ..............................":" "( .ali.setup )" 
echo ..............................":" "( .as )" 
echo ...................................................... 
echo ............."U S A G E: Alias Listing System"
echo ...................................................... 
echo ...."entry point with explaination:" "( .ali )" 
echo .........................."aliases:" "( .ali.a )" 
echo ........................"functions:" "( .ali.f )" 
echo ...................................................... 
if [ -s "$output_file_var" ]; then # ·c·
echo ............. description for : ......................
    while read -r list; do # ·c·
echo .............................."${list^^}:" \( .$list \) 
    done < "$output_file_var" # ·c·    
echo ...................................................... 
fi # ·c·
echo ______________________________________________________ 
#
# # # # # # # # # # # # # # # # # # # # # # 
# xdg-open https://github.com/sehzam/ali  #
# # # # # # # # # # # # # # # # # # # # # # 
#
output_file_var="$HOME/.aliases/.bin/.ali.list.names"
output_file_final="$HOME/.aliases/.bin/.ali.info"

if [ -s "$output_file_var" ]; then
    while IFS= read -r line; do
        # Entfernen von Leerzeichen und Zeilenumbrüchen aus der Zeile
        cleaned_line=$(echo "$line" | tr -d '[:space:]')
        # Hinzufügen der Punkte zwischen den Begriffen
        echo -n "| .$cleaned_line " >> "$output_file_final"
        
    done < "$output_file_var"
fi
echo "
# ·o· ______________________________________________ ·o· 
# ·o·                                                ·o·
# ·o·              { A } = lias                      ·o·
# ·o·              { L } = ists                      ·o·
# ·o·              { I } = njection                  ·o·
# ·o·                                                ·o·
# ·o· ______________________________________________ ·o·" >> ~/.aliases/.ali.aliases

info=$(<$output_file_final)

echo -n "avail_lists='(| .ali $info|)'" >> ~/.aliases/.ali.aliases
echo -n " # ·f·" >> ~/.aliases/.ali.aliases
