# ·f· ______________________________________________ ·f· 
# ·f· ------------------ Functions ----------------- ·f· .ali Entry Point
# ·f· ______________________________________________ ·f· 
# ·e· ( START ) = { grep and highlight pattern in file }
    grp() { # ·c·
      grep -E "$1" "$2" # ·c·
    } # ·c·
# ·e· ( START ) = { List of alias files containing alias definitions for the shell }
directory_to_search="$HOME/.aliases/.dir/" # ·v· 
output_file="$HOME/.aliases/.etc/.ali.list"
output_file_var="$HOME/.aliases/.etc/.ali.list.names"
search_pattern=".***.aliases" # ·v· 
if ! [ -f ~/.aliases/.etc/.ali.lists ]; then # ·c·  
        # ·e· ( INFO ) Find commmand searchs for files with pattern abd write it to file  
        find "$directory_to_search" -type f -name "$search_pattern" -exec basename {} \; > "$output_file" # ·c·
        find "$directory_to_search" -type f -name "$search_pattern" -exec basename {} \; | awk -F. '{print $2}' > "$output_file_var" # ·c·
fi # ·c· 
# ·e· ( INFO ) Source reading the aliases to make it available at current session 
# ·e· ( INFO ) Check, output file exists and is not empty 
if [ -s "$output_file" ]; then # ·c·
    while read -r alias_file; do # ·c·
    # ·e· ( INFO ) If the output file exists, than source it 
        # ·e· ( INFO ) Check, if file exists as regular file  
        if [ -f "$directory_to_search$alias_file" ]; then # ·c· 
            # ·e· ( INFO ) sourcing the file, for loading it to current shell session
            # ·e· ( INFO ) in .bashrc its loads at every new shell session
            . "$directory_to_search$alias_file" # ·c·
        fi # ·c· 
    done < "$output_file" # ·c·v· 
fi # ·c·
# ·f· ------------------ Functions ----------------- ·f· .ali Entry Point
# ·f· ______________________________________________ ·f· 
# ·f· ------------------ Functions ----------------- ·f· Directory Control System
# ·f· ______________________________________________ ·f· 

# ·e· ·· START ·· = { make a backup of file given as parameter with timestamp }
bk() { # ·c·
  # ·e· = alias = .bk
  cp "$1" "$1_$(date '+%Y%m%d%H%M%S').bak" # ·c· 
} # ·c· 

# ·e· ·· START ·· = { create folder recursively and enter them }
cf() { # ·c·
  # ·e· = alias = .cf
  mkdir -p "$1" && cd "$1" # ·c·
} # ·c· 

# ·e· ·· START ·· = { searchs for string and replace the in file }
sr() { # ·c·
  # ·e· = alias = .sr
  sed -i "s/$1/$2/g" "$3" # ·c· 
} # ·c· 

function copy_create_folder() { # ·c· 
  # ·e· # Get the last argument as the destination
  local destination="${@: -1}" # ·c·  
  mkdir -p "$destination" # ·c· 
  # ·e· # Shift all arguments except the last one (destination)
  shift $(( $# - 1 )) # ·c·  
  cp -r "$@" "$destination" # ·c· 
} # ·c· 

# ·f· ------------------ Functions ----------------- ·f· Directory Control System
