
# ·f· ______________________________________________ ·f· 
# ·f· ------------------ Functions  ---------------- ·f· Directory Control System
# ·f· ______________________________________________ ·f· 
#
# ·e· ( START ) = { grep and highlight pattern in file }
    grp() { # ·c·
      grep -E "$1" "$2" # ·c·
    } # ·c·
#
# ·e· ·· START ·· = { make a backup of file given as parameter with timestamp }
bk() { # ·c·
  # ·e· = alias = .bk
    cp "$1" "$1_$(date '+%Y%m%d%H%M%S').bak" # ·c· 
} # ·c· 
#
# ·e· ·· START ·· = { create folder recursively and enter them }
cf() { # ·c·
  # ·e· = alias = .cf
    mkdir -p "$1" && cd "$1" # ·c·
} # ·c· 
#
# ·e· ·· START ·· = { searchs for string and replace the in file }
sr() { # ·c·
  # ·e· = alias = .sr
    sed -i "s/$1/$2/g" "$3" # ·c· 
} # ·c· 
#

function copy_create_folder() {
  local destination="${@: -1}"
  local source_paths=("${@:1:$#-1}")

  # Erstellen des Zielverzeichnisses, wenn es nicht existiert
  mkdir -p "$destination"

  for source in "${source_paths[@]}"; do
    if [ -d "$source" ]; then
      # Wenn die Quelle ein Verzeichnis ist, kopieren wir den gesamten Inhalt rekursiv
      find "$source" -mindepth 1 -exec bash -c 'mkdir -p "$0/${1#"$PWD/"}" && cp -r "$1" "$0/${1#"$PWD/"}"' "$destination" '{}' \;
    else
      # Wenn die Quelle eine Datei ist, kopieren wir sie direkt in das Zielverzeichnis
      cp "$source" "$destination"
    fi
  done
}


#
# ·f· ------------------ Functions  ---------------- ·f· Directory Control System